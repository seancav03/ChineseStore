<html lang="en" class="gr__getbootstrap_com">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"
        integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <link href="https://getbootstrap.com/docs/4.0/examples/navbar-fixed/navbar-top-fixed.css" rel="stylesheet">
    <link href="https://getbootstrap.com/docs/4.0/examples/grid/grid.css" rel="stylesheet">

    <style type="text/css">
        div.col-6 {
            max-width: 100% !important;
            border: 0px !important;
        }

        div.oneLine {
            display: flex;
            justify-content: space-evenly;
            white-space: nowrap;
        }

        div.parentCol {
            background-color: rgb(255, 255, 255);
        }

        main.offtop {
            margin-top: 110px;
        }

        div.named {
            font-size: 1.5rem;
            font-weight: 600 !important;
        }

        div.text {
            background-color: rgb(73, 31, 75);
            margin-bottom: 20px;
            text-align: center;
            font-size: 1.75rem;
            font-weight: 400 !important;
            font-family: sans-serif;
        }

        div#elements {
            border: 5px !important;
            border-color: rgb(73, 31, 75) !important;
        }

        div.title {
            font-size: 2.7rem;
            font-weight: 500 !important;
            margin-bottom: 15px;
        }

        a.bolded {
            font-size: 1.75rem !important;
        }

        nav.theme {
            background-color: rgb(73, 31, 75) !important;
        }

        div#title {
            color: rgb(253, 253, 253);
        }

        body {
            margin: 0;
            padding: 0;
        }

        button.edit {
            font-size: 16;
            background-color: transparent !important;
            border: 0px solid rgba(86, 61, 124, .3);
            color: rgb(45, 42, 235);
        }

        div.bordered {
            background-color: rgba(86, 61, 124, .15);
            border: 1px solid rgba(86, 61, 124, .2);
        }

        div.mainName {
            max-width: 50% !important;
            flex: 0 0 50% !important;
        }

        div.otherInfo {
            max-width: 25% !important;
        }

        div.labels {
            font-size: 1.25rem;
            font-weight: 500;
        }
        
        div.nums {
            display: flex;
            align-items: center;
            justify-content: center;
        }
    </style>



</head>

<body onload="makeElements()">
    <nav class="navbar navbar-expand-md navbar-dark fixed-top theme">
        <a class="navbar-brand bolded" href="#">Awesomeness Store</a>
        <button class="navbar-toggler collapsed" type="button" data-toggle="collapse" data-target="#navbarCollapse"
            aria-controls="navbarCollapse" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="navbar-collapse collapse" id="navbarCollapse">
            <div class="navbar-nav">
                <a class="nav-item nav-link active" href="">Store<span class="sr-only">(current)</span></a>
                <a class="nav-item nav-link"
                    href="javascript:document.location.href = 'studentHistory.htm'">History</a>
                <a class="nav-item nav-link"
                    href="javascript:document.location.href = 'studentAccount.htm'">Account</a>
                <a class="nav-item nav-link" onclick=logout()>Log Out</a>
            </div>
        </div>
    </nav>

    <main role="main" class="container offtop" id="main">
        <div class="text-center title">
            Store
        </div>

        <div id="content">
            <div class="row centered">
                <div class="col-4 column text-center bordered labels mainName">
                    Item Name
                </div>

                <div class="col-4 column text-center bordered labels otherInfo">
                    Golden Cost
                </div>

                <div class=" col-4 column text-center bordered labels otherInfo">
                    Awesome Cost
                </div>
            </div>

            <div id="items" class="row centered"></div>
        </div>

    </main>

    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"
        integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous">
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"
        integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous">
    </script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"
        integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous">
    </script>

    <script type='text/javascript'>
        let email
        let password
        let prefix = "/chinesestore";

        function getCredentials(){
            let promise = new Promise(function(resolve, reject){
                fetch(prefix + "/cookieAuthenticate", {
                method: 'POST', 
                }).then(result => {
                    result.json().then(result2 => {
                        if(result2.LoggedIn == false){
                            document.location.href = 'login.htm'
                        } else {
                            resolve(result2);
                        }
                    }).catch(result => {
                    console.log("ERROR - parsing JSON")
                })
                }).catch(result => {
                    console.log("ERROR - getting cookieAuthenticate")
                })
            })
            return promise;
        } 

        function makeElements() {
            
            let promise = getCredentials();
            promise.then(creds => {
                email = creds.Username;
                password = creds.Password;

                let store = document.getElementById("items")

                let main = document.getElementById("main")

                let last = store.lastElementChild
                while (last) {
                    last.remove()
                    last = store.lastElementChild
                }

                let items = []
                fetch(prefix + "/getStore", {
                    method: 'POST',
                    headers: {
                        //'Content-Type': 'application/url',
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    body: "", // body data type must match "Content-Type" header
                })
                .then(function (result) {
                    result.json().then(function (result2) {
                        items = result2.data;

                        for (let i = 0; i < items.length; i++) {
                            let itemName = document.createElement('div')
                            // name.textContent = students[i]["name"]
                            let nameText = document.createElement('div')
                            nameText.className = 'labels'
                            nameText.textContent = items[i][0]
                            itemName.className =
                                'col-4 column text-center bordered mainName'
                            let brk0 = document.createElement('br')
                            let buyButton = document.createElement('button')
                            buyButton.id = items[i][0]
                            buyButton.textContent = "Buy"
                            buyButton.className = 'edit'
                            buyButton.onclick = function () {
                                buy(this.id)
                            }

                            itemName.appendChild(nameText)
                            itemName.append(brk0)
                            itemName.appendChild(buyButton)

                            store.appendChild(itemName)

                            let goldenness = document.createElement('div')
                            goldenness.className =
                                'col-4 column text-center bordered otherInfo labels nums'
                            goldenness.id = "golden"
                            goldenness.textContent = items[i][2]

                            store.appendChild(goldenness)

                            let awesomeness = document.createElement('div')
                            awesomeness.className =
                                'col-4 column text-center bordered otherInfo labels nums'
                            awesomeness.id = "awesome"
                            awesomeness.textContent = items[i][1]


                            store.appendChild(awesomeness)
                        }
                        
                    });
                })
            })

        }

        function buy(itemName) {
            
            fetch(prefix + "/buyItem", {
            method: 'POST', 
            headers: {
            //'Content-Type': 'application/url',
            'Content-Type': 'application/x-www-form-urlencoded',
            }, 
            body: "username=" + email + "&password=" + password + "&Item=" + itemName, // body data type must match "Content-Type" header
            })
            .then(function(result) {
                result.json().then(function(result2){
                    if(result2.data){
                    alert("Success")
                } else{
                    alert("Not Enough Currency")
                }
                })
            })
        }
        function logout(){
            fetch(prefix + "/logout", {
                method: 'POST',
                headers: {
                    //'Content-Type': 'application/url',
                    'Content-Type': 'application/x-www-form-urlencoded',
                },
            })
            .then(function (result) {
                //should be logged out
                //reload page
                location.reload();
            })
        }
    </script>
</body>

</html>